{"version":3,"file":"static/js/821.8eeff12d.chunk.js","mappings":"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","sources":["components/common/table/Table.jsx","components/common/icon/IconsSet.jsx","hooks/useRole/useRoleList.js","utils/modal.js","components/common/button/DeleteButton.jsx","components/RolesPages/RoleListHeader.jsx","components/RolesPages/RolesList.jsx","services/apiProxyService.js","utils/csrfTokenUtility.js","services/httpMethods.js","utils/translationsUtility.js"],"sourcesContent":["import\n    React,\n    {\n        useState,\n        useRef,\n        useEffect,\n        useCallback,\n        useMemo\n    } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/styles/ag-grid.css'; // Core grid CSS, always needed\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\nimport {__} from \"../../../utils/translationsUtility\"; // Optional theme CSS\n\nconst Table = ({columnDefs, data}) => {\n\n    const gridRef = useRef();\n    // DefaultColDef sets props common to all Columns\n    const defaultColDef = useMemo( ()=> ({\n        sortable: true,\n\n    }));\n\n    // Example of consuming Grid Event\n    const cellClickedListener = useCallback( event => {\n        console.log('cellClicked', event);\n    }, []);\n\n\n    // Example using Grid's API\n    const buttonListener = useCallback( e => {\n        gridRef.current.columnApi.resetColumnState();\n\n    }, []);\n\n    return (\n        <div>\n            <div className=\"row mt-2 d-flex text-right place-content-end\">\n                <div className=\"col-2 offset-10 display-flex \">\n                    <button\n                        className=\"btn btn-secondary \"\n                        onClick={buttonListener}>\n                        {__('Reset grid')}\n                    </button>\n                </div>\n            </div>\n            {/* On div wrapping Grid a) specify theme CSS Class Class and b) sets Grid size */}\n            <div className=\"ag-theme-alpine\" style={{width: '100%', height:'550px'}}>\n                <AgGridReact\n                    pagination={true}\n                    paginationPageSize={10}\n                    ref={gridRef} // Ref for accessing Grid's API\n                    rowData={data} // Row Data for Rows\n                    columnDefs={columnDefs} // Column Defs for Columns\n                    defaultColDef={defaultColDef} // Default Column Properties\n                    animateRows={true} // Optional - set to 'true' to have rows animate when sorted\n                    rowSelection='multiple' // Options - allows click selection of rows\n                    onCellClicked={cellClickedListener} // Optional - registering for Grid Event\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Table;","export const AddIcon = ({...props}) => {\n    return (\n        <svg className=\"icon icon-add\" {...props}>\n            <symbol id=\"icon-add\" viewBox=\"0 0 32 32\">\n                <path\n                    d=\"M27 0h-22c-2.76 0.003-4.997 2.24-5 5v22c0.003 2.76 2.24 4.997 5 5h22c2.76-0.003 4.997-2.24 5-5v-22c-0.003-2.76-2.24-4.997-5-5zM30 27c0 1.657-1.343 3-3 3h-22c-1.657 0-3-1.343-3-3v-22c0-1.657 1.343-3 3-3h22c1.657 0 3 1.343 3 3z\"></path>\n                <path d=\"M17 6h-2v9h-9v2h9v9h2v-9h9v-2h-9z\"></path>\n            </symbol>\n            <use href=\"#icon-add\"></use>\n        </svg>\n    )\n}\n\nexport const DeleteIcon = ({...props}) => {\n    return (\n        <svg className=\"icon icon-trash\" {...props}>\n            <symbol id=\"icon-trash\" viewBox=\"0 0 32 32\">\n                <path\n                    d=\"M32 4h-12v-2c0-1.105-0.895-2-2-2h-4c-1.104 0-2 0.895-2 2v2h-12v2h4v21c0.003 2.76 2.24 4.997 5 5h14c2.76-0.003 4.997-2.24 5-5v-21h4zM14 2h4v2h-4zM26 27c0 1.657-1.343 3-3 3h-14c-1.657 0-3-1.343-3-3v-21h20z\"></path>\n                <path d=\"M9 8h2v20h-2z\"></path>\n                <path d=\"M15 8h2v20h-2z\"></path>\n                <path d=\"M21 8h2v20h-2z\"></path>\n            </symbol>\n            <use href=\"#icon-trash\"></use>\n        </svg>\n    )\n}","import {fetchRoles} from \"../../services/apiProxyService\";\nimport {useEffect, useState} from \"react\";\nfunction useRoleList(){\n    const [rolesList, setRolesList] = useState([]);\n    const refreshRolesList = async () => {\n        const rolesResponse = await fetchRoles()\n        setRolesList(rolesResponse);\n    }\n    useEffect( () => {\n        refreshRolesList();\n    }, []);\n    return {\n        rolesList,\n        refreshRolesList\n    }\n}\nexport default useRoleList;","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport {__} from \"./translationsUtility\";\n\nexport const Alert = withReactContent(Swal)\n\nexport const toastr = ({icon, timer, title, html}) => {\n    return Alert.fire({\n        icon,\n        timer,\n        title,\n        html\n    })\n}\n\nexport const modal =  async ({icon, title, html, footer, confirmButtonText, cancelButtonText, yesCallback, noCallback, showCancelButton}) => {\n   await Swal.fire({\n        icon,\n        title,\n        html,\n        confirmButtonText,\n        cancelButtonText,\n        showCancelButton,\n        footer,\n    }).then((result) => {\n        if (result.value && typeof yesCallback === 'function') {\n            yesCallback()\n        }\n        if (!result.value && typeof noCallback === 'function') {\n            noCallback()\n        }\n    })\n}\nexport const deleteModal = async ({ title, html, confirmButtonText, cancelButtonText, yesCallback, noCallback }) => {\n    const deleteText = __('Delete')\n    const cancelText = __('Cancel')\n\n    await modal({\n        title,\n        html,\n        confirmButtonText,\n        cancelButtonText,\n        icon:'info',\n        yesCallback,\n        noCallback,\n        showCancelButton: true\n    })\n\n}\nexport const modalInfo = ({title, html, footer, yesCallback, noCallback}) => {\n    return modal({\n        icon: 'info',\n        title,\n        html,\n        footer,\n        yesCallback,\n        noCallback\n    })\n}","import {DeleteIcon} from \"../icon/IconsSet\"\nimport './DeleteButton.css'\nimport {deleteModal} from \"../../../utils/modal\";\n\nconst DeleteButton = ({ title, html, confirmButtonText, cancelButtonText, yesCallback, noCallback }) => {\n    const showModal = () => {\n        deleteModal({title, html, confirmButtonText, cancelButtonText, yesCallback, noCallback})\n    }\n    return(\n        <>\n            <button className='delete-button' onClick={showModal}>\n                <DeleteIcon />\n            </button>\n        </>\n    )\n}\nexport default DeleteButton;","import {__} from \"../../utils/translationsUtility\";\nimport DeleteButton from \"../common/button/DeleteButton\";\n\nconst CustomLinkRenderer = (params) => {\n    const link = `/role/${params.data.id}/update`;\n    return (\n        <a href={link} className={\"agGridAnkur\"}>{params.data.name}</a>\n    );\n};\n\n\n\nconst RoleListHeader = ({deleteYesCallback}) => [\n    {\n        headerName: __('Id'),\n        field: 'id',\n        checkboxSelection: false,\n        filter: true,\n        width: 80,\n        pinned: 'left'\n    },\n    {\n        headerName: __('Name'),\n        checkboxSelection: false,\n        field: 'name',\n        filter: true,\n        width: 300,\n        pinned: 'left',\n        cellRenderer: CustomLinkRenderer,\n        sortable: true,\n        comparator: (a, b) => a.localeCompare(b)\n    },\n    {\n        headerName: __('Scope'),\n        field: 'scope',\n        checkboxSelection: false,\n        filter: true,\n        width: 100,\n        sortable: true,\n        comparator: (a, b) => a.localeCompare(b)\n    },\n    {\n        headerName: __('Type'),\n        field: 'type',\n        checkboxSelection: false,\n        filter: true,\n        width: 100,\n        sortable: true,\n        comparator: (a, b) => a.localeCompare(b),\n    },\n    {\n        headerName: __('Project'),\n        checkboxSelection: false,\n        filter: true,\n        cellRenderer: function(params) {\n            if (params.data.projectInfo) {\n                const { title } = JSON.parse(params.data.projectInfo.i18n);\n                return title[params.data.projectInfo.primary_language];\n            }\n        },\n        width: 120,\n        sortable: true,\n        comparator: (a, b) => a.localeCompare(b),\n    },\n    {\n        headerName: __('Created Date'),\n        field: 'created_date',\n        checkboxSelection: false,\n        filter: true,\n        sortable: true,\n        comparator: (a, b) => a.localeCompare(b),\n    },\n    {\n        headerName: __('Created By'),\n        checkboxSelection: false,\n        filter: true,\n        valueGetter: function(params) {\n            return params.data.creatorUserInfo?.name;\n        },\n        sortable: true,\n        comparator: (a, b) => a.localeCompare(b),\n    },\n    {\n        headerName: __('Last Modified Date'),\n        field: 'last_modified_date',\n        checkboxSelection: false,\n        filter: true,\n        sortable: true,\n        comparator: (a, b) => a.localeCompare(b),\n    },\n    {\n        headerName: __('Last Modified By'),\n        field: 'last_modified_by',\n        checkboxSelection: false,\n        filter: true,\n        valueGetter: function(params) {\n            return params.data.updaterUserInfo?.name;\n        },\n        sortable: true,\n        comparator: (a, b) => a.localeCompare(b),\n    },\n    {\n        headerName: __('Actions'),\n        field: 'actions',\n        checkboxSelection: false,\n        filter: true,\n        pinned: 'right',\n        cellRenderer:function (params) {\n            const confirmationText = __('Are you sure you want to delete the role {}?').replace('{}', params.data.name);\n            return <DeleteButton\n                    title={__('Delete Role')}\n                    html={confirmationText}\n                    confirmButtonText={__('Delete')}\n                    cancelButtonText={__('Cancel')}\n                    yesCallback={() => deleteYesCallback(params.data.id)} />\n        },\n\n    }\n\n];\n\nexport default RoleListHeader;","import { __ } from '../../utils/translationsUtility';\nimport Table from \"../common/table/Table\";\nimport {AddIcon} from \"../common/icon/IconsSet\";\nimport useRoleList from \"../../hooks/useRole/useRoleList\";\nimport RoleListHeader from \"./RoleListHeader\";\nimport {fetchDeleteRole} from \"../../services/apiProxyService\";\n\nconst RolesList = () => {\n    const {rolesList, refreshRolesList} = useRoleList();\n    const deleteYesCallback = (id) => {\n        fetchDeleteRole(id)\n            .then(() => {\n                refreshRolesList();\n            })\n    }\n\n    return (\n        <>\n            <div className=\"row mt-4 d-flex place-content-end\">\n                <div className=\"col-2 offset-10\">\n                    <button\n                        className=\"btn btn-default\"\n                        onClick={() => { window.location.href='role/0/update' }}>\n                        <AddIcon />\n                        {__('Create new role')}\n                    </button>\n                </div>\n            </div>\n            <Table\n                columnDefs={RoleListHeader({deleteYesCallback})}\n                data={rolesList} />\n        </>\n    )\n\n};\n\nexport default RolesList;\n","import {get, post} from './httpMethods';\n\nexport const BASE_URL = window.HERAMS_PROXY_API_URL || `${window.location.origin}/api-proxy/core`;\n\nexport const fetchProfile = (params, headers) => {\n    return get(`${BASE_URL}/user/profile`, params, headers);\n};\n\nexport const updateProfile = (data, headers) => {\n    return post(`${BASE_URL}/user/profile`, data, headers);\n};\n\nexport const updateRoleAndPermissions = (id, data) => {\n    return post(`${BASE_URL}/roles/${id}/update`, data);\n}\nexport const fetchRoles = (params, headers) => {\n    return get(`${BASE_URL}/roles/index`, params, headers);\n}\nexport const fetchProjects = (params, headers) => {\n    return get(`${BASE_URL}/projects`, params, headers);\n}\n\nexport const fetchRole = (id, params, headers) => {\n    return get(`${BASE_URL}/roles/${id}/view`, params, headers);\n}\n\nexport const fetchPermissions = (params, headers) => {\n    return get(`${BASE_URL}/permissions/index`, params, headers);\n}\n\nexport const fetchRolePermissions = (id, params, headers) => {\n    return get(`${BASE_URL}/roles/${id}/permissions`, params, headers);\n}\nexport const fetchProjectVisibilityChoices = (data, headers) => {\n    const lang = document.documentElement.lang;\n    return get(`${BASE_URL}/configuration/visibilities?_lang=${lang}`, data, headers);\n};\n\nexport const fetchDeleteRole = (id, params, headers) => {\n    return get(`${BASE_URL}/roles/${id}/delete`, params, headers);\n}\n","export function getCsrfToken() {\n    const meta = document.querySelector('meta[name=\"csrf-token\"]');\n    return meta ? meta.getAttribute(\"content\") : null;\n}\n","import {getCsrfToken} from \"../utils/csrfTokenUtility\";\n\nexport const get = async (url, params = {}, headers = {}) => {\n    const fullUrl = new URL(url)\n    Object.keys(params).forEach(key => fullUrl.searchParams.append(key, params[key]));\n    const response = await fetch(fullUrl, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            ...headers\n        },\n    });\n    return handleResponse(response);\n};\n\n\nexport const post = async (url, data) => {\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-Csrf-Token': getCsrfToken(),\n                'X-Requested-With': 'XMLHttpRequest'\n            },\n            body: JSON.stringify(data),\n        });\n\n        if (!response.ok) {\n            throw new Error(`Server responded with status: ${response.status}`);\n        }\n\n        return response;\n    } catch (error) {\n        console.error('Error during POST request:', error);\n        throw error;  // re-throw the error so it's caught in updateProfile as well\n    }\n};\n\nconst handleResponse = (response) => {\n    if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n    }\n    return response.json();\n};\n","const TRANSLATIONS_KEY = 'translations';\n\nexport const saveTranslations = (translations) => {\n    try {\n        const serializedTranslations = JSON.stringify(translations);\n        localStorage.setItem(TRANSLATIONS_KEY, serializedTranslations);\n    } catch (error) {\n        console.error('Failed to save translations to localStorage:', error);\n    }\n};\n\nexport const getTranslation = (key) => {\n    try {\n\n        const serializedTranslations = localStorage.getItem(TRANSLATIONS_KEY);\n        if (!serializedTranslations) return key; // No translations found\n\n        const translations = JSON.parse(serializedTranslations);\n        return translations[key] || key;\n    } catch (error) {\n        console.error('Failed to retrieve translation from localStorage:', error);\n        return null;\n    }\n};\n\nexport const getAllTranslations = () => {\n    try {\n        const serializedTranslations = localStorage.getItem(TRANSLATIONS_KEY);\n        if (!serializedTranslations) return {};\n\n        return JSON.parse(serializedTranslations);\n    } catch (error) {\n        console.error('Failed to retrieve translations from localStorage:', error);\n        return {};\n    }\n};\n\nexport const clearTranslations = () => {\n    try {\n        localStorage.removeItem(TRANSLATIONS_KEY);\n    } catch (error) {\n        console.error('Failed to clear translations from localStorage:', error);\n    }\n};\n\nexport const __ = getTranslation;\n"],"names":["_ref","columnDefs","data","gridRef","useRef","defaultColDef","useMemo","sortable","cellClickedListener","useCallback","event","console","log","buttonListener","e","current","columnApi","resetColumnState","_jsxs","children","_jsx","className","onClick","__","style","width","height","AgGridReact","pagination","paginationPageSize","ref","rowData","animateRows","rowSelection","onCellClicked","AddIcon","props","Object","assign","_objectDestructuringEmpty","_objectSpread","id","viewBox","d","href","DeleteIcon","_ref2","_useState","useState","_useState2","_slicedToArray","rolesList","setRolesList","refreshRolesList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rolesResponse","wrap","_context","prev","next","fetchRoles","sent","stop","apply","arguments","useEffect","modal","withReactContent","Swal","_ref3","icon","title","html","footer","confirmButtonText","cancelButtonText","yesCallback","noCallback","showCancelButton","then","result","value","_x","deleteModal","_ref5","_callee2","_ref4","_context2","_x2","_Fragment","CustomLinkRenderer","params","link","concat","name","deleteYesCallback","headerName","field","checkboxSelection","filter","pinned","cellRenderer","comparator","a","b","localeCompare","projectInfo","JSON","parse","i18n","primary_language","valueGetter","_params$data$creatorU","creatorUserInfo","_params$data$updaterU","updaterUserInfo","confirmationText","replace","DeleteButton","_useRoleList","useRoleList","window","location","Table","RoleListHeader","fetchDeleteRole","BASE_URL","HERAMS_PROXY_API_URL","origin","updateRoleAndPermissions","post","headers","get","fetchProjects","fetchRole","fetchPermissions","fetchRolePermissions","getCsrfToken","meta","document","querySelector","getAttribute","url","fullUrl","response","_args","length","undefined","URL","keys","forEach","key","searchParams","append","fetch","method","abrupt","handleResponse","body","stringify","ok","Error","status","t0","error","_x3","json","TRANSLATIONS_KEY","saveTranslations","translations","serializedTranslations","localStorage","setItem","clearTranslations","removeItem","getItem"],"sourceRoot":""}