version: '3.6'
volumes:
  runtime:
x-env:
  base: &base
    build:
      context: docker/cli
    volumes:
      - .:/project:ro
      - ./tests:/project/tests:rw
      - ./protected/migrations:/project/protected/migrations:rw
      - ./protected/messages:/project/protected/messages:rw
      - runtime:/runtime
    tmpfs:
      - /tmp:rw,noexec,nosuid,uid=${UID-0}
      - /project/public/assets:rw,noexec,nosuid,uid=${UID-0}
    environment:
      DB_HOST: devdb
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
      DB_PASS: ${DB_PASS}
      YII_ENV: $YII_ENV
      LS_HOST: ${LS_HOST}
      LS_PASS: ${LS_PASS}
      LS_USER: ${LS_USER}
      RUNTIME_PATH: /runtime
      SMTP_HOST: mailcatcher
      RESPONSE_SUBMISSION_KEY: ${RESPONSE_SUBMISSION_KEY}
      URL_SIGNING_SECRET: ${URL_SIGNING_SECRET}
      PRIVATE_KEY_FILE: /project/local/testkey
      SMTP_PORT: 1025
    user: ${UID-0}:${GID-0}

    working_dir: "/project"
  mysql: &mysql
    image: mysql
    command: --character-set-server=utf8mb4 --max-connections=1000 --default-authentication-plugin=mysql_native_password
    user: ${UID-0}:${GID-0}
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
services:
## Web server
  serve:
    << : *base
    depends_on:
      - devdb
      - mailcatcher
      - phpmyadmin
    ports:
      - "0.0.0.0:${APP_PORT-12346}:8080"
  ## Mysql server (local), this will create a persistent data store for local development
  devdb:
    << : *mysql
    volumes:
      - ./local/devdb:/var/lib/mysql:rw
      - ./tests/_data/db:/docker-entrypoint-initdb.d:ro

  # Mysql server (testing), this will store data on tmpfs, it will not persist
  testdb:
    << : *mysql
    volumes:
      - ./tests/_data/db:/docker-entrypoint-initdb.d:ro
    tmpfs:
      /var/lib/mysql:rw,nodev,nosuid,relatime,uid=${UID-0}
  cli:
    << : *base
    depends_on:
      - devdb
      - mailcatcher
      - phpmyadmin
    entrypoint: ["/sbin/tini", "--", "/project/protected/yiic"]
    command: ""
  testcli:
    <<: *base
    depends_on:
      - testdb
    entrypoint: ["/sbin/tini", "--", "/project/protected/yiic"]
    command: ""
    environment:
      DB_HOST: testdb
      DB_USER: $DB_USER
      DB_NAME: $DB_NAME
      DB_PASS: $DB_PASS
      YII_ENV: $YII_ENV
      URL_SIGNING_SECRET: ${URL_SIGNING_SECRET}
      RUNTIME_PATH: /runtime
  composer:
    << : *base
    entrypoint: [
      "/sbin/tini",
      "--",
      "composer"
    ]
    volumes:
      - /composer-cache
      - .:/project:rw
  codeception:
    << : *base
    depends_on:
      - testdb
    entrypoint: [
      "/sbin/tini",
      "--",
      "wait-for-it",
      "30",
      "testdb",
      "3306",
      "/project/vendor/bin/codecept"
    ]
    command: "run"
    environment:
      DB_HOST: testdb
      DB_USER: $DB_USER
      DB_NAME: $DB_NAME
      DB_PASS: $DB_PASS
      YII_ENV: $YII_ENV
      URL_SIGNING_SECRET: ${URL_SIGNING_SECRET}
      RUNTIME_PATH: /runtime
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - devdb
    environment:
      PMA_HOSTS: testdb,devdb
      PMA_HOST: devdb
      PMA_PASSWORD: $DB_PASS
      PMA_USER: $DB_USER
    ports:
      - "127.0.0.1:${PHPMYADMIN_PORT-12345}:80"
    tmpfs:
      - /sessions
  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - "127.0.0.1:${MAILCATCHER_PORT-12347}:1080"