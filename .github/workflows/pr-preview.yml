name: Preview environment
on:
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'protected/migrations/**'
jobs:
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v2
      - name: Authenticate to kubernetes
        uses: azure/k8s-set-context@v1
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.STAGING_K8S_SECRET }}
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_HEAD_REF#refs/*/}" >> $GITHUB_ENV
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@0.1.2
        with:
          include: k8s/staging/preview-deployment.yaml
          find: "{DEPLOYMENT_NAME}"
          replace: "${{ env.RELEASE_VERSION }}"
      - uses: Azure/k8s-deploy@v1.4
        with:
          namespace: 'staging'
          manifests: |
            k8s/staging/preview-deployment.yaml
          images: |
            ghcr.io/herams-who/herams-backend/app:${{ github.sha }}
          kubectl-version: 'latest'
  build:
    name: Build container
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer install --ignore-platform-reqs
      - id: kaniko_build
        name: Kaniko build
        uses: aevea/action-kaniko@master
        with:
          registry: ghcr.io
          password: ${{ secrets.GHCR_TOKEN }}
          tag: ${{ github.sha }}
          tag_with_latest: true
          extra_args: "--build-arg COMMIT_SHA=${{ github.sha }} --use-new-run"
          image: herams-who/herams-backend/app
          build_file: docker/app/Dockerfile
