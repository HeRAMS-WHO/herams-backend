name: Deploy to v2.herams-staging.org
on:
  push:
    branches: [ v2 ]
jobs:
  build-api:
    name: Build API container
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: ramsey/composer-install@v2
        with:
          working-directory: microservices/api
          composer-options: "--ignore-platform-reqs --optimize-autoloader"
      - uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          push: true
          context: .
          file: docker/api/Dockerfile
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          tags: |
            ghcr.io/herams-who/herams-backend/api:${{ github.sha }}
  build:
    name: Build container
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: ramsey/composer-install@v2
        with:
          composer-options: "--ignore-platform-reqs --optimize-autoloader"
      - uses: actions/setup-node@v3
        name: Load NPM cache
        with:
          cache: 'npm'
      - run: npm ci --ignore-scripts --legacy-peer-deps
        name: Install frontend dependencies
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          file: docker/app/Dockerfile
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          tags: |
            ghcr.io/herams-who/herams-backend/app:${{ github.sha }}
  deploy:
    needs:
      - build
      - build-api
    runs-on: ubuntu-latest
    name: Deploy to staging-v2
    steps:
      - uses: actions/checkout@v3
      - name: Set manifests
        run: |
          echo 'MANIFESTS<<EOF' >> $GITHUB_ENV
          find k8s/shared k8s/staging-v2 -type f >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - run: echo "$MANIFESTS"
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
      - name: Authenticate to kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.K8S_STAGING_V2 }}
      - name: get_manifests
        run: echo manifests=$(ls k8s/shared/*.yaml k8s/staging-v2/*.yaml | tr "\n" ",") >> $GITHUB_ENV
      - name: Deploy to kubernetes
        uses: azure/k8s-deploy@v4
        with:
          namespace: 'staging-v2'
          manifests: ${{ env.manifests }}
          images: |
            ghcr.io/herams-who/herams-backend/app:${{ github.sha }}
            ghcr.io/herams-who/herams-backend/api:${{ github.sha }}
