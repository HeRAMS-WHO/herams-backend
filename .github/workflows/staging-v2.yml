name: Deploy to v2.herams-staging.org
on:
  push:
    branches: [ v2 ]
jobs:
  build-api:
    name: Build API container
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('microservices/api/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer install --ignore-platform-reqs
        working-directory: microservices/api
      - uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          push: true
          context: .
          file: docker/api/Dockerfile
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          tags: |
            ghcr.io/herams-who/herams-backend/api:${{ github.sha }}
  build:
    name: Build container
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer install --ignore-platform-reqs
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          file: docker/app/Dockerfile
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          tags: |
            ghcr.io/herams-who/herams-backend/app:${{ github.sha }}
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v3
      - name: Set manifests
        run: |
          echo 'MANIFESTS<<EOF' >> $GITHUB_ENV
          find k8s/shared k8s/staging-v2 -type f >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - run: echo "$MANIFESTS"
      - name: Authenticate to kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.STAGING_K8S_SECRET }}
      - name: get_manifests
        run: echo manifests=$(ls k8s/shared/*.yaml k8s/staging-v2/*.yaml | tr "\n" ",") >> $GITHUB_ENV
      - uses: Azure/k8s-deploy@v4
        with:
          namespace: 'staging-v2'
          manifests: ${{ env.manifests }}
          images: |
            ghcr.io/herams-who/herams-backend/app:${{ github.sha }}
            ghcr.io/herams-who/herams-backend/api:${{ github.sha }}
          kubectl-version: 'latest'
