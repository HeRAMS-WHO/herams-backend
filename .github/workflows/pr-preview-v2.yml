name: preview_environment
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches: v2
jobs:
  precondition:
    name: "Check for migrations"
    if: github.event.pull_request.head.repo.full_name == 'HeRAMS-WHO/herams-backend'
    runs-on: ubuntu-latest
    outputs:
      hasmigrations: ${{ steps.migrations.outputs.changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - uses: marceloprado/has-changed-path@v1
        id: migrations
        with:
          paths: microservices/console/src/migrations
  deploy:
    needs:
      - build
      - precondition
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to kubernetes
        uses: azure/k8s-set-context@v3.0
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.STAGING_K8S_SECRET }}
      - name: Extract PR branch name
        run: echo "RELEASE_VERSION=${GITHUB_HEAD_REF#refs/*/}" >> $GITHUB_ENV
      - name: Extract PR number
        run: echo PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH") >> $GITHUB_ENV
      - name: Create yaml from template
        env:
          DEPLOYMENT_NAME: ${{ env.RELEASE_VERSION }}
          NEEDS_DATABASE: ${{ needs.precondition.outputs.hasmigrations }}
          COMMIT_SHA: ${{ github.sha }}
        run: k8s/parse-templates.sh k8s/staging/*.yaml.php
      - name: Dump template
        run: cat k8s/staging/preview-deployment.yaml
      - uses: azure/setup-kubectl@v3
      - uses: Azure/k8s-deploy@v4.6
        with:
          namespace: 'staging'
          manifests: |
            k8s/staging/sealed-database-preview.yaml
            k8s/staging/preview-deployment.yaml
          images: |
            ghcr.io/herams-who/herams-backend/app:${{ github.sha }}
            ghcr.io/herams-who/herams-backend/api:${{ github.sha }}
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v2.1.0
        with:
          issue-number: "${{ env.PR_NUMBER }}"
          body: |
            Preview environment created at: https://${{ env.RELEASE_VERSION }}.v2.herams-staging.org
          reactions: '+1'
  build:
    name: Build containers
    needs: [ precondition ]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer install --ignore-platform-reqs
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
      - run: npm ci --ignore-scripts --legacy-peer-deps
      - name: Navigate to React App directory
        run: cd ./protected/react-src/
      - name: Install React App dependencies
        run: npm install
      - name: Build React App
        run: npm run build
      - name: Cache React App node modules
        uses: actions/cache@v3
        with:
          path: ./protected/react-src/node_modules
          key: ${{ runner.os }}-react-node-modules-${{ hashFiles('./protected/react-src/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-react-node-modules-
      - uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          push: true
          context: .
          file: docker/app/Dockerfile
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            INCLUDE_DATABASE_SEED=${{ needs.precondition.outputs.hasmigrations }}
          tags: |
            ghcr.io/herams-who/herams-backend/app:${{ github.sha }}
  build-api:
    name: Build API container
    needs: [precondition]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('microservices/api/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer install --ignore-platform-reqs
        working-directory: microservices/api
      - uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          push: true
          context: .
          file: docker/api/Dockerfile
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          tags: |
            ghcr.io/herams-who/herams-backend/api:${{ github.sha }}
