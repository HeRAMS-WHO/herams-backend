name: Deploy to prod
on:
  push:
    tags:
      - 'v*'
    branches:
      - k8s-prod
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer install --ignore-platform-reqs
      - run: docker-compose build
      - run: docker network create devproxy
      - run: cp .env.default .env
      - run: docker-compose run --rm codeception run
      - run: composer stan
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v2
      - name: Authenticate to kubernetes
        uses: azure/k8s-set-context@v1
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.PROD_K8S_SECRET }}
      - uses: Azure/k8s-deploy@v1.4
        with:
          namespace: 'prod'
          manifests: |
            k8s/shared/app-config-map.yaml
            k8s/shared/nginx-config-map.yaml
            k8s/shared/deployment.yaml
            k8s/prod/ingress-prod.yaml
            k8s/prod/sealed-limesurvey-prod.yaml
            k8s/prod/sealed-database-prod.yaml
            k8s/prod/sealed-smtp-prod.yaml
            k8s/prod/sealed-appgitp u-prod.yaml
          images: |
            ghcr.io/herams-who/herams-backend/app:prod-${{ github.sha }}
          kubectl-version: 'latest'
  build:
    name: Build container
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer install --ignore-platform-reqs
      - name: Build commit
        if: github.ref == 'refs/heads/k8s-prod'
        uses: aevea/action-kaniko@master
        with:
          registry: ghcr.io
          password: ${{ secrets.GHCR_TOKEN }}
          tag: prod-${{ github.sha }}
          extra_args: "--build-arg COMMIT_SHA=${{ github.sha }} --use-new-run"
          image: herams-who/herams-backend/app
          build_file: docker/app/Dockerfile
      - name: Build tag
        if: github.ref != 'refs/heads/k8s-prod'
        uses: aevea/action-kaniko@master
        with:
          registry: ghcr.io
          password: ${{ secrets.GHCR_TOKEN }}
          tag: ${{ github.ref }}
          tag_with_latest: "false"
          strip_tag_prefix: refs-tags-
          extra_args: "--build-arg COMMIT_SHA=${{ github.sha }} --use-new-run"
          image: herams-who/herams-backend/app
          build_file: docker/app/Dockerfile
