name: Deploy to staging
on:
  push:
    branches: [ master ]
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer install --ignore-platform-reqs
      - run: docker-compose build
      - run: docker network create devproxy
      - run: cp .env.default .env
      - run: docker-compose run --rm codeception run --coverage-xml
      - run: composer stan
      - name: Get coveralls submitter
        run: composer global require cedx/coveralls
      - name: Upload coverage
        run: coveralls ./tests/_output/coverage.xml
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_SERVICE_NAME: "Secure github action"
          COVERALLS_SERVICE_JOB_ID: ${{ github.job }}

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    name: Deploy
    steps:
    - name: Authenticate to kubernetes
      uses: azure/k8s-set-context@v1
      with:
        method: service-account
        k8s-url: ${{ secrets.KUBERNETES_URL }}
        k8s-secret: ${{ secrets.STAGING_K8S_SECRET }}
    - uses: Azure/k8s-deploy@v1.4
      with:
        namespace: 'staging'
        manifests: |
          k8s/deployment.yaml
        images: |
          ghcr.io/herams-who/herams-backend/app:${{ github.sha }}
        kubectl-version: 'latest'
  build:
    needs: [test]
    name: Build container
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: composer install --ignore-platform-reqs
      - id: kaniko_build
        name: Kaniko build
        uses: aevea/action-kaniko@master
        with:
          registry: ghcr.io
          password: ${{ secrets.GHCR_TOKEN }}
          tag: ${{ github.sha }}
          tag_with_latest: true
          extra_args: "--build-arg COMMIT_SHA=${{ github.sha }} --use-new-run"
          image: herams-who/herams-backend/app
          build_file: docker/app/Dockerfile
